package entity;

import org.springframework.transaction.annotation.Transactional;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Entity;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Temporal;

/**
 * Returns a Course entity object that holds everything related to a typical course 
 * <p>
 This entity class holds the general attributes of a course. 
 Contained in this class are attributes such as credithours, like its title(BSCS-3),
 a startsOn, endsOn for it, contents of this course and the teacher assigned to it.
 */
@Entity
public class Course implements java.io.Serializable {

    @Id
    @GeneratedValue
    @Column(name = "course_id")
    private Integer courseid;
    @Column
    private String classtitle;
    @Column
    @Temporal(javax.persistence.TemporalType.DATE)
    private Date startsOn;
    @Column
    @Temporal(javax.persistence.TemporalType.DATE)
    private Date endsOn;
    @Column
    private int creditHours;
    
    /*
    * This relationship identifies the contents of this course.
    * The reverse relationship is present in the Content entity class
    */
    @OneToMany(mappedBy = "course",cascade = {CascadeType.ALL},fetch = FetchType.LAZY)
    private Set<Content> contents = new HashSet<>(0);

    /*
    * This relationship identifies the teachers associated with this course.
    * The reverse relationship is present in the Teacher entity class
    */
    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="teacher_id",nullable=false)
    private Teacher teacher;

    /*
    * This relationship contains the students taking this course.
    * The reverse relationship is present in the Student entity class
    */
    
    @ManyToMany(cascade = {CascadeType.ALL},fetch = FetchType.LAZY)
    @JoinTable(name = "course_students", joinColumns = {
        @JoinColumn(name = "course_id")}, inverseJoinColumns = {
        @JoinColumn(name = "student_id")})
    private Set<Student> students = new HashSet<>(0);
    
    /*
    * Class constructor.
    */
    public Course() {
    }
    
    /*
    * Class constructor that builds this object by taking in defined attributes
    */
    public Course(String classtitle, Date starttime, Date endtime, int creditHours) {
        this.classtitle = classtitle;
        this.startsOn = starttime;
        this.endsOn = endtime;
        this.creditHours = creditHours;
    }
    /*
    * This method will return the course id of this course.
    * Note; we have not defined any setter method for course id, since it is 
    * to be generated by the dbms.
    */

    public Integer getCourseid() {
        return courseid;
    }

    public Teacher getTeacher() {
        return teacher;
    }

    public void setTeacher(Teacher teacher) {
        this.teacher = teacher;
    }

    public String getClasstitle() {
        return classtitle;
    }

    public void setClasstitle(String classtitle) {
        this.classtitle = classtitle;
    }

    public Date getStartsOn() {
        return startsOn;
    }

    public void setStartsOn(Date startsOn) {
        this.startsOn = startsOn;
    }

    public Date getEndsOn() {
        return endsOn;
    }

    public void setEndsOn(Date endsOn) {
        this.endsOn = endsOn;
    }

    public int getCreditHours() {
        return creditHours;
    }

    public void setCreditHours(int creditHours) {
        this.creditHours = creditHours;
    }

    public Set getContents() {
        return contents;
    }



    @Override
    @Transactional
    public String toString() {
        return "Course{" + "courseid=" + courseid + ", classtitle=" + classtitle + ", startsOn=" + startsOn + ", endsOn=" + endsOn + ", creditHours=" + creditHours + ", contents=" + contents + ", teacher=" + teacher + ", students=" + students + '}';
    }

    public void setContents(Set<Content> contents) {
        this.contents = contents;
    }

    public Set<Student> getStudents() {
        return students;
    }

    public void setStudents(Set<Student> students) {
        this.students = students;
    }
}
